name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      
      - name: Output Release URL
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      
      - name: Save Release URL
        uses: actions/upload-artifact@v3
        with:
          name: release_url
          path: release_url.txt

  build-release:
    name: Build Release
    needs: create-release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: logpile
            asset_name: logpile-linux-amd64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: logpile
            asset_name: logpile-macos-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: logpile
            asset_name: logpile-macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: logpile.exe
            asset_name: logpile-windows-amd64.exe
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libfontconfig1-dev
      
      - name: Install system dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install pkg-config fontconfig
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      
      - name: Download Release URL
        uses: actions/download-artifact@v3
        with:
          name: release_url
      
      - name: Get Release URL
        id: get_release_url
        shell: bash
        run: echo "url=$(cat release_url.txt)" >> $GITHUB_OUTPUT
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_url.outputs.url }}
          asset_path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream

